{
	"info": {
		"_postman_id": "45ae944f-c201-473f-90b7-cea59ccfd6e2",
		"name": "Postman_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\t\tpm.test(\"Check status code is 200\", function () {\r",
							"    \t\tpm.response.to.have.status(200);\r",
							"\t\t});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first\n",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Check status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json:\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Kris\");\r",
							"});\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.):\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"   \t pm.expect(jsonData.age).to.eql(\"23\");\r",
							"\t});\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.):\r",
							"\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(parseInt(1000));\r",
							"});\r",
							"\r",
							"//7. Спарсить request:\r",
							"\r",
							"var reqBody = request.data;\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.):\r",
							"\r",
							"pm.test(\"Check your name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqBody.name);\r",
							"});\r",
							"\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"pm.test(\"Check your age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(reqBody.age);\r",
							" \t});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.) - \r",
							"\r",
							"pm.test(\"Check your salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(parseInt(reqBody.salary));\r",
							" \t});\r",
							"\r",
							"//11. Вывести в консоль параметр family из response:\r",
							"\r",
							"var resp = jsonData.family;\r",
							"console.log('resp = ' , resp)\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Check u_salary_1_5_year = salary*4\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(reqBody.salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "23",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kris",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//2. Статус код 200\r",
							"\r",
							"pm.test(\"Check status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"    \t\r",
							"//4. Спарсить request.\r",
							"\r",
							"var reqBody =  pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.) \r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqBody.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.) - \r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(reqBody.age);\r",
							"});\r",
							"\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"\r",
							"\t\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql (parseInt(reqBody.salary));\r",
							"});\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"\r",
							"\r",
							"var resp = jsonData.family;\r",
							"console.log('resp = ' , resp)\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"\r",
							"var resp = jsonData.family;\r",
							"console.log('resp = ' , resp)\r",
							"\r",
							"pm.test(\"Check the dog has name\", function () {\r",
							"    pm.expect(resp.pets.dog).to.property(\"name\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age:\r",
							"\r",
							"var resp = jsonData.family;\r",
							"console.log('resp = ' , resp)\r",
							"\r",
							"pm.test(\"Check the dog has age\", function () {\r",
							"     pm.expect(resp.pets.dog).to.property(\"age\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky:\r",
							"\r",
							"var resp = jsonData.family;\r",
							"console.log('resp = ' , resp)\r",
							"\r",
							"pm.test(\"Check dog's name Lucky \", function () {\r",
							"    pm.expect(resp.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"\r",
							"\r",
							"\tvar resp = jsonData.family;\r",
							"\tconsole.log('resp = ' , resp)\r",
							"\r",
							" pm.test(\"Check dog's age\", function () {\r",
							"    pm.expect(resp.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Kris&age=29&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kris"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200:\r",
							"\r",
							"pm.test(\"Check status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json:\r",
							"\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    \t\r",
							"//4. Спарсить request:\r",
							"\r",
							"var reqBody = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    \tpm.expect(jsonData.name).to.eql(reqBody.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(parseInt(reqBody.age));\r",
							"});\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"\r",
							"\tvar salary = reqBody.salary\r",
							"\tconsole.log('salary =' + salary)\r",
							"\t\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"\r",
							"\tvar salary = jsonData.salary\r",
							"\tconsole.log('salary =' + salary)\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"\r",
							"\tvar salary = 1*jsonData.salary[0]\r",
							"\tconsole.log('salary =' + salary)\r",
							"\r",
							"pm.test(\"Your salary\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(2000);\r",
							"});\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response:\r",
							"\r",
							"\t\tvar salary = 1*jsonData.salary[1]\r",
							"\t\tconsole.log('salary =' + salary)\r",
							"\r",
							"\r",
							"\tpm.test(\"Your salary\", function () {\r",
							"   \t\t    pm.expect(salary).to.eql(4000);\r",
							"\t\t});\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response:\r",
							"\r",
							"\t\tvar salary = +jsonData.salary[2]\r",
							"\t\tconsole.log('salary =' + salary)\r",
							"\r",
							"\t\tpm.test(\"Your salary\", function () {\r",
							"   \t\t    pm.expect(salary).to.eql(6000);\r",
							"\t\t});\r",
							"\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.):\r",
							"\r",
							"\tvar salary = jsonData.salary[0]\r",
							"pm.test(\"Check resp_salary[0]=req_salary\", function () {\r",
							"   \tpm.expect(salary).to.eql (parseInt(reqBody.salary));\r",
							"});\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.):\r",
							"\r",
							"\tvar salary = 1*jsonData.salary[1]\r",
							"\tconsole.log(salary)\r",
							"\r",
							"\tpm.test(\"Check salary[1]=salary*2\", function () {\r",
							"   \t    pm.expect(salary).to.eql(reqBody.salary*2);\r",
							"\t});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.):\r",
							"\r",
							"\tvar salary = 1*jsonData.salary[2]\r",
							"\tconsole.log(salary)\r",
							"\r",
							"pm.test(\"salary[2]=salary*3\", function () {\r",
							"   \t pm.expect(salary).to.eql(reqBody.salary*3);\r",
							"});\r",
							"\r",
							"//18. Передать в окружение переменную name:\r",
							"var name = jsonData.name\r",
							"pm.test(\"set name\", function () {\r",
							"   \tpm.expect(name).to.eql('Kris');\r",
							"});\r",
							"pm.environment.set(\"name_1\", name);\r",
							"\r",
							"//19. Передать в окружение переменную age \r",
							"var age = jsonData.age\r",
							"\tconsole.log('age =' + age)\r",
							"\r",
							"\r",
							"pm.test(\"set age\", function () {\r",
							"   \tpm.expect(age).to.eql(29);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"age_1\", age);\r",
							"\r",
							"//20. Передать в окружение переменную salary\r",
							"\r",
							"\tvar salary = 1*jsonData.salary[1];\r",
							"\tconsole.log('salary =' + salary)\r",
							"\r",
							"\r",
							"pm.test(\"set salary\", function () {\r",
							"   \t\tpm.expect(salary).to.eql(4000);\r",
							"\t});\r",
							"\r",
							"\tpm.environment.set(\"salary_1\", salary);\r",
							"\r",
							"\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary:\r",
							"\r",
							"\tfor (var i=0; i < salary.length; i++){\r",
							"    \tconsole.log(\"salary_\" + i + \":\" +salary[i])\r",
							"\r",
							"\t}\t\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Kris&age=29&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Kris"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//5. Статус код 200\r",
							"\r",
							"\tpm.test(\"Check status code is 200\", function () {\r",
							"    \tpm.response.to.have.status(200);\r",
							"\t});\r",
							"\r",
							"//6. Спарсить response body в json:\r",
							"\r",
							"\tvar resp = JSON.parse(responseBody);\r",
							"\r",
							"//7. Спарсить request:\r",
							"\r",
							"\tvar req = (request.data);\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary:\r",
							" \r",
							"\tvar salary = resp.start_qa_salary\t\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\tpm.test(\"Your test name\", function () {\r",
							"     \tpm.expect(resp.start_qa_salary).to.have.property+('start_qa_salary');\r",
							"\t});\r",
							"\t\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months:\r",
							"\tvar salary = resp.qa_salary_after_6_months\t\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\tpm.test(\"Your test name\", function () {\r",
							"     \tpm.expect(resp.qa_salary_after_6_months).to.have.property+('qa_salary_after_6_months');\r",
							"\t});\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months:\r",
							"\r",
							"\tvar salary = resp.qa_salary_after_12_months\t\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\r",
							"\tpm.test(\"Your test name\", function () {\r",
							"     \tpm.expect(resp.qa_salary_after_12_months).to.have.property+(\"qa_salary_after_12_months\");\r",
							"\t});\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"\tvar salary = resp[\"qa_salary_after_1.5_year\"]\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\r",
							"\tpm.test(\"Check qa_salary_after_1.5_year\", function () {\r",
							"     \tpm.expect(salary).to.have.property+(\"qa_salary_after_1.5_year\");\r",
							"\t});\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years: \r",
							"\r",
							"\tvar salary = resp[\"qa_salary_after_3.5_year\"]\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_year\", function () {\r",
							"    pm.expect(salary).to.have.property+(\"qa_salary_after_3.5_year\");\r",
							"});\r",
							"//13. Проверить, что json response имеет параметр person:\r",
							"\r",
							"\tvar person = resp.person\r",
							"\tconsole.log(\"person = \", person)\r",
							"    pm.test(\"Your test name\", function () {\r",
							"    \t\tpm.expect(resp.person.u_age).to.have.property+(29);\r",
							"\t});\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.):- \r",
							"\r",
							"\tvar salary = resp.start_qa_salary\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\r",
							"\tpm.test(\"Check start_qa_salary = salary from request\", function () {\r",
							"     \tpm.expect(salary).to.eql(parseInt(req.salary));\r",
							"\t});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.):\r",
							"\r",
							"\tvar salary = resp.qa_salary_after_6_months\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\r",
							"\tpm.test(\"qa_salary_after_6_months = salary*2 from request\", function () {\r",
							"     \tpm.expect(salary).to.eql(req.salary*2);\r",
							"\t});\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.):\r",
							"\r",
							"\tvar salary = resp.qa_salary_after_12_months\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\r",
							"\tpm.test(\"qa_salary_after_12_months =salary*2.7 from request\", function () {\r",
							"     \tpm.expect(salary).to.eql(req.salary*2.7);\r",
							"\t});\r",
							"\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.):\r",
							"\r",
							"\tvar salary = resp[\"qa_salary_after_1.5_year\"]\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\r",
							"\tpm.test(\"qa_salary_after_1.5_year равен salary*3.3\", function () {\r",
							"     \tpm.expect(salary).to.eql(req.salary*3.3);\r",
							"\t});\r",
							"\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.):\r",
							"\r",
							"\tvar salary = resp[\"qa_salary_after_3.5_year\"]\r",
							"\tconsole.log(\"salary = \" + salary)\r",
							"\r",
							"\tpm.test(\"qa_salary_after_3.5_year = salary*3.8\", function () {\r",
							"     \tpm.expect(resp[\"qa_salary_after_3.5_year\"]).to.eql+(req.salary*3.8);\r",
							"\t});\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.):\r",
							"\r",
							"\tvar person  = resp.person\r",
							"\tconsole.log(\"person = \" , person)\r",
							"\r",
							"\tpm.test(\"1-й элемент из u_name = salary \", function () {\r",
							"     \tpm.expect(person.u_name[1]).to.eql(parseInt(req.salary));\r",
							"\t});\r",
							"\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.): \r",
							"\r",
							"\tvar person  = resp.person\r",
							"\tconsole.log(\"person = \" , person)\r",
							"\r",
							"\tpm.test(\"u_age = age fromrequest \", function () {\r",
							"     \tpm.expect(person.u_age).to.eql(parseInt(req.age));\r",
							"\t});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.):\r",
							"\r",
							"\tvar person  = resp.person\r",
							"\tconsole.log(\"person = \" , person)\r",
							"\r",
							"\tpm.test(\"u_salary_5_years равен salary*4.2\", function () {\r",
							"     \tpm.expect(person.u_salary_5_years).to.eql(req.salary*4.2);\r",
							"\t});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name_1}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age_1}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary_1}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}